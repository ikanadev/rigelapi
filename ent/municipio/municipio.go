// Code generated by ent, DO NOT EDIT.

package municipio

const (
	// Label holds the string label denoting the municipio type in the database.
	Label = "municipio"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeSchools holds the string denoting the schools edge name in mutations.
	EdgeSchools = "schools"
	// EdgeProvincia holds the string denoting the provincia edge name in mutations.
	EdgeProvincia = "provincia"
	// Table holds the table name of the municipio in the database.
	Table = "municipios"
	// SchoolsTable is the table that holds the schools relation/edge.
	SchoolsTable = "schools"
	// SchoolsInverseTable is the table name for the School entity.
	// It exists in this package in order to avoid circular dependency with the "school" package.
	SchoolsInverseTable = "schools"
	// SchoolsColumn is the table column denoting the schools relation/edge.
	SchoolsColumn = "municipio_schools"
	// ProvinciaTable is the table that holds the provincia relation/edge.
	ProvinciaTable = "municipios"
	// ProvinciaInverseTable is the table name for the Provincia entity.
	// It exists in this package in order to avoid circular dependency with the "provincia" package.
	ProvinciaInverseTable = "provincia"
	// ProvinciaColumn is the table column denoting the provincia relation/edge.
	ProvinciaColumn = "provincia_municipios"
)

// Columns holds all SQL columns for municipio fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "municipios"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"provincia_municipios",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
