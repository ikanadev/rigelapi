// Code generated by ent, DO NOT EDIT.

package year

const (
	// Label holds the string label denoting the year type in the database.
	Label = "year"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldValue holds the string denoting the value field in the database.
	FieldValue = "value"
	// EdgeClasses holds the string denoting the classes edge name in mutations.
	EdgeClasses = "classes"
	// EdgePeriods holds the string denoting the periods edge name in mutations.
	EdgePeriods = "periods"
	// EdgeAreas holds the string denoting the areas edge name in mutations.
	EdgeAreas = "areas"
	// EdgeSubscriptions holds the string denoting the subscriptions edge name in mutations.
	EdgeSubscriptions = "subscriptions"
	// Table holds the table name of the year in the database.
	Table = "years"
	// ClassesTable is the table that holds the classes relation/edge.
	ClassesTable = "classes"
	// ClassesInverseTable is the table name for the Class entity.
	// It exists in this package in order to avoid circular dependency with the "class" package.
	ClassesInverseTable = "classes"
	// ClassesColumn is the table column denoting the classes relation/edge.
	ClassesColumn = "year_classes"
	// PeriodsTable is the table that holds the periods relation/edge.
	PeriodsTable = "periods"
	// PeriodsInverseTable is the table name for the Period entity.
	// It exists in this package in order to avoid circular dependency with the "period" package.
	PeriodsInverseTable = "periods"
	// PeriodsColumn is the table column denoting the periods relation/edge.
	PeriodsColumn = "year_periods"
	// AreasTable is the table that holds the areas relation/edge.
	AreasTable = "areas"
	// AreasInverseTable is the table name for the Area entity.
	// It exists in this package in order to avoid circular dependency with the "area" package.
	AreasInverseTable = "areas"
	// AreasColumn is the table column denoting the areas relation/edge.
	AreasColumn = "year_areas"
	// SubscriptionsTable is the table that holds the subscriptions relation/edge.
	SubscriptionsTable = "subscriptions"
	// SubscriptionsInverseTable is the table name for the Subscription entity.
	// It exists in this package in order to avoid circular dependency with the "subscription" package.
	SubscriptionsInverseTable = "subscriptions"
	// SubscriptionsColumn is the table column denoting the subscriptions relation/edge.
	SubscriptionsColumn = "year_subscriptions"
)

// Columns holds all SQL columns for year fields.
var Columns = []string{
	FieldID,
	FieldValue,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
