// Code generated by ent, DO NOT EDIT.

package teacher

const (
	// Label holds the string label denoting the teacher type in the database.
	Label = "teacher"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldLastName holds the string denoting the last_name field in the database.
	FieldLastName = "last_name"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// EdgeClasses holds the string denoting the classes edge name in mutations.
	EdgeClasses = "classes"
	// EdgeStudentSyncs holds the string denoting the studentsyncs edge name in mutations.
	EdgeStudentSyncs = "studentSyncs"
	// EdgeActivitySyncs holds the string denoting the activitysyncs edge name in mutations.
	EdgeActivitySyncs = "activitySyncs"
	// EdgeAttendanceSyncs holds the string denoting the attendancesyncs edge name in mutations.
	EdgeAttendanceSyncs = "attendanceSyncs"
	// EdgeClassPeriodSyncs holds the string denoting the classperiodsyncs edge name in mutations.
	EdgeClassPeriodSyncs = "classPeriodSyncs"
	// Table holds the table name of the teacher in the database.
	Table = "teachers"
	// ClassesTable is the table that holds the classes relation/edge.
	ClassesTable = "classes"
	// ClassesInverseTable is the table name for the Class entity.
	// It exists in this package in order to avoid circular dependency with the "class" package.
	ClassesInverseTable = "classes"
	// ClassesColumn is the table column denoting the classes relation/edge.
	ClassesColumn = "teacher_classes"
	// StudentSyncsTable is the table that holds the studentSyncs relation/edge.
	StudentSyncsTable = "student_syncs"
	// StudentSyncsInverseTable is the table name for the StudentSync entity.
	// It exists in this package in order to avoid circular dependency with the "studentsync" package.
	StudentSyncsInverseTable = "student_syncs"
	// StudentSyncsColumn is the table column denoting the studentSyncs relation/edge.
	StudentSyncsColumn = "teacher_student_syncs"
	// ActivitySyncsTable is the table that holds the activitySyncs relation/edge.
	ActivitySyncsTable = "activity_syncs"
	// ActivitySyncsInverseTable is the table name for the ActivitySync entity.
	// It exists in this package in order to avoid circular dependency with the "activitysync" package.
	ActivitySyncsInverseTable = "activity_syncs"
	// ActivitySyncsColumn is the table column denoting the activitySyncs relation/edge.
	ActivitySyncsColumn = "teacher_activity_syncs"
	// AttendanceSyncsTable is the table that holds the attendanceSyncs relation/edge.
	AttendanceSyncsTable = "attendance_syncs"
	// AttendanceSyncsInverseTable is the table name for the AttendanceSync entity.
	// It exists in this package in order to avoid circular dependency with the "attendancesync" package.
	AttendanceSyncsInverseTable = "attendance_syncs"
	// AttendanceSyncsColumn is the table column denoting the attendanceSyncs relation/edge.
	AttendanceSyncsColumn = "teacher_attendance_syncs"
	// ClassPeriodSyncsTable is the table that holds the classPeriodSyncs relation/edge.
	ClassPeriodSyncsTable = "class_period_syncs"
	// ClassPeriodSyncsInverseTable is the table name for the ClassPeriodSync entity.
	// It exists in this package in order to avoid circular dependency with the "classperiodsync" package.
	ClassPeriodSyncsInverseTable = "class_period_syncs"
	// ClassPeriodSyncsColumn is the table column denoting the classPeriodSyncs relation/edge.
	ClassPeriodSyncsColumn = "teacher_class_period_syncs"
)

// Columns holds all SQL columns for teacher fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldLastName,
	FieldEmail,
	FieldPassword,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
