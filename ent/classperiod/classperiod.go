// Code generated by ent, DO NOT EDIT.

package classperiod

const (
	// Label holds the string label denoting the classperiod type in the database.
	Label = "class_period"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStart holds the string denoting the start field in the database.
	FieldStart = "start"
	// FieldEnd holds the string denoting the end field in the database.
	FieldEnd = "end"
	// FieldFinished holds the string denoting the finished field in the database.
	FieldFinished = "finished"
	// EdgeAttendanceDays holds the string denoting the attendancedays edge name in mutations.
	EdgeAttendanceDays = "attendanceDays"
	// EdgeActivities holds the string denoting the activities edge name in mutations.
	EdgeActivities = "activities"
	// EdgeClass holds the string denoting the class edge name in mutations.
	EdgeClass = "class"
	// EdgePeriod holds the string denoting the period edge name in mutations.
	EdgePeriod = "period"
	// Table holds the table name of the classperiod in the database.
	Table = "class_periods"
	// AttendanceDaysTable is the table that holds the attendanceDays relation/edge.
	AttendanceDaysTable = "attendance_days"
	// AttendanceDaysInverseTable is the table name for the AttendanceDay entity.
	// It exists in this package in order to avoid circular dependency with the "attendanceday" package.
	AttendanceDaysInverseTable = "attendance_days"
	// AttendanceDaysColumn is the table column denoting the attendanceDays relation/edge.
	AttendanceDaysColumn = "class_period_attendance_days"
	// ActivitiesTable is the table that holds the activities relation/edge.
	ActivitiesTable = "activities"
	// ActivitiesInverseTable is the table name for the Activity entity.
	// It exists in this package in order to avoid circular dependency with the "activity" package.
	ActivitiesInverseTable = "activities"
	// ActivitiesColumn is the table column denoting the activities relation/edge.
	ActivitiesColumn = "class_period_activities"
	// ClassTable is the table that holds the class relation/edge.
	ClassTable = "class_periods"
	// ClassInverseTable is the table name for the Class entity.
	// It exists in this package in order to avoid circular dependency with the "class" package.
	ClassInverseTable = "classes"
	// ClassColumn is the table column denoting the class relation/edge.
	ClassColumn = "class_class_periods"
	// PeriodTable is the table that holds the period relation/edge.
	PeriodTable = "class_periods"
	// PeriodInverseTable is the table name for the Period entity.
	// It exists in this package in order to avoid circular dependency with the "period" package.
	PeriodInverseTable = "periods"
	// PeriodColumn is the table column denoting the period relation/edge.
	PeriodColumn = "period_class_periods"
)

// Columns holds all SQL columns for classperiod fields.
var Columns = []string{
	FieldID,
	FieldStart,
	FieldEnd,
	FieldFinished,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "class_periods"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"class_class_periods",
	"period_class_periods",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
